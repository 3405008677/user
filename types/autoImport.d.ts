// Generated by 'unplugin-auto-import'
export {}
declare global {
  const ref: typeof import('vue')['ref']
  //效果和ref一样但强制数据更新 ui
  const triggerRef: typeof import('vue')['triggerRef']

  // 生命周期
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onMounted: typeof import('vue')['onMounted']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onUpdated: typeof import('vue')['onUpdated']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onUnmounted: typeof import('vue')['onUnmounted']

  const computed: typeof import('vue')['computed']
  const defineComponent: typeof import('vue')['defineComponent']
  const h: typeof import('vue')['h']
  const provide: typeof import('vue')['provide']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isRef: typeof import('vue')['isRef']
  const nextTick: typeof import('vue')['nextTick']

  const reactive: typeof import('vue')['reactive']
  const isReactive: typeof import('vue')['isReactive']
  const readonly: typeof import('vue')['readonly']
  const isReadonly: typeof import('vue')['isReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const toRef: typeof import('vue')['toRef']
  const unref: typeof import('vue')['unref']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  // keepAlive
  const onActivated: typeof import('vue')['onActivated']
  const onDeactivated: typeof import('vue')['onDeactivated']

  /**
   * vue-router
   */
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']

  /**
   * element
   */
  const ElMessage: typeof import('element-plus')['ElMessage']
  const ElLoading: typeof import('element-plus')['ElLoading']
  const ElNotification: typeof import('element-plus')['ElNotification']
}
